"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Writing",{

/***/ "./public/components/controlbarcomps/ImagesFet.js":
/*!********************************************************!*\
  !*** ./public/components/controlbarcomps/ImagesFet.js ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _store_actions_Editing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../store/actions/Editing */ \"./store/actions/Editing.js\");\n/* harmony import */ var _styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../styles/writing.module.css */ \"./styles/writing.module.css\");\n/* harmony import */ var _styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\n\nclass GifFetching extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    componentDidUpdate() {\n        const thisprops1 = this.props;\n        if (this.props.Type == \"I\") {\n            let imageDiv = document.getElementById(\"image_div\");\n            imageDiv.innerHTML = \"\";\n            let length = this.props.Fetched.photos.length;\n            let thisprops2 = thisprops1;\n            for(let i = 0; i < length; i++){\n                // let image=document.createElement(\"img\")\n                let thisprops3 = thisprops2;\n                let image = document.createElement(\"img\");\n                image.setAttribute(\"src\", thisprops3.Fetched.photos[\"\".concat(i)].src.small);\n                image.setAttribute(\"class\", \"\".concat((_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().FetchedImage)));\n                image.setAttribute(\"id\", \"Image-\".concat(i));\n                imageDiv.appendChild(image);\n                image.addEventListener(\"click\", ()=>{\n                    let copy = document.createElement(\"img\");\n                    copy.setAttribute(\"src\", thisprops3.Fetched.photos[image.id.split(\"-\")[1]].src.original);\n                    copy.removeAttribute(\"class\");\n                    copy.setAttribute(\"class\", \"articleImage\");\n                    this.props.Select(copy);\n                });\n            }\n            let article = document.getElementsByClassName(\"article\")[0];\n            let selecDiv = this.props.Selected;\n            let selecDivInit = document.getElementsByClassName(\"blog-content\")[0];\n            let images = document.querySelectorAll(\".\".concat((_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().FetchedGif)));\n            // for(let j=0;j<images.length;j++){\n            //     images[j].addEventListener('click',()=>{\n            //         let copy=images[j].cloneNode(true)\n            //         copy.removeAttribute(\"class\")\n            //         copy.setAttribute(\"class\",\"articleImage\")\n            //         this.props.Select(copy)\n            //     })\n            // }\n            const thisprops = this.props.Fetched;\n            console.log(thisprops);\n            const thisporps0 = this.props;\n            let index = 1;\n            const thisState = this.state;\n            const self = this;\n            imageDiv.onscroll = function() {\n                if (imageDiv.offsetHeight + imageDiv.scrollTop >= imageDiv.scrollHeight) {\n                    // let SecondVar=thisprops\n                    // let index=imageDiv.childElementCount\n                    // let limit=imageDiv.childElementCount+4\n                    // let thisprops1=thisporps0\n                    let index = thisState.Index;\n                    self.ImageFetch(thisState.Input, index);\n                    self.setState({\n                        Index: index + 1\n                    });\n                // if(limit<50){\n                //     for(let i=index;i<limit;i++){\n                //         let thisporps2=thisprops1\n                //         let ThirdVar=SecondVar\n                //         // console.log(ThirdVar.data[i].images.original.url)\n                //         let image=document.createElement(\"img\")\n                //         image.setAttribute(\"src\",ThirdVar.photos[`${i}`].src.small)\n                //         image.setAttribute(\"class\",`${styles.FetchedGif}`)\n                //         image.setAttribute(\"id\",i)\n                //         let fourthvar=ThirdVar\n                //         let thisprops3=thisporps2\n                //         image.addEventListener('click',()=>{\n                //             let copy=document.createElement(\"img\")\n                //             copy.setAttribute(\"src\",fourthvar.data[image.id].images.original.url)\n                //             copy.removeAttribute(\"class\")\n                //             copy.setAttribute(\"class\",\"articleImage\")\n                //             thisprops3.Select(copy)\n                //         })\n                //         imageDiv.appendChild(image)\n                // }\n                // }\n                // if(index==1){\n                //     const secondVar=thisprops\n                //     for(let i=imageDiv.childElementCount;i<i+4;i++){\n                //         console.log(1)\n                //         // let image=document.createElement(\"img\")\n                //         // let image=document.createElement(\"img\")\n                //         let ThirdVar=secondVar\n                //         console.log(ThirdVar.data[5].images.original.url)\n                //         // image.setAttribute(\"src\",thisprops.data[`${i}`].images.original.url)\n                //         // image.setAttribute(\"class\",`${styles.FetchedGif}`)\n                //         // imageDiv.appendChild(image)\n                //     }\n                //     index++\n                // }\n                }\n            };\n        }\n    }\n    componentDidMount() {\n        const thisState = this.state;\n        let search_inp = document.getElementsByClassName(\"\".concat((_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().image_search)))[0];\n        search_inp.addEventListener(\"keydown\", (e)=>{\n            if (e.key == \"Enter\") {\n                let index = thisState.Index;\n                this.ImageFetch(search_inp.value, index);\n                this.setState({\n                    Index: index + 1,\n                    Input: search_inp.value\n                });\n            }\n        });\n    }\n    render() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"HolderImg\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().Search),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            className: (_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().image_search)\n                        }, void 0, false, {\n                            fileName: \"/home/rafid/RavenScribe/Frontend/public/components/controlbarcomps/ImagesFet.js\",\n                            lineNumber: 210,\n                            columnNumber: 25\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/rafid/RavenScribe/Frontend/public/components/controlbarcomps/ImagesFet.js\",\n                        lineNumber: 208,\n                        columnNumber: 22\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_writing_module_css__WEBPACK_IMPORTED_MODULE_6___default().Image_display),\n                        id: \"image_div\"\n                    }, void 0, false, {\n                        fileName: \"/home/rafid/RavenScribe/Frontend/public/components/controlbarcomps/ImagesFet.js\",\n                        lineNumber: 215,\n                        columnNumber: 22\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/rafid/RavenScribe/Frontend/public/components/controlbarcomps/ImagesFet.js\",\n                lineNumber: 207,\n                columnNumber: 11\n            }, this)\n        }, void 0, false);\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            Fetched: null,\n            Index: 1,\n            Input: null\n        };\n        this.Select = (div)=>{\n            this.props.Select(div);\n        };\n        this.ImageFetch = (key, page)=>{\n            this.props.Image(key, page);\n        };\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        Fetched: state.Edit.FetchList,\n        Selected: state.Edit.Selected,\n        Type: state.Edit.CatFetch\n    };\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        Image: (key, page)=>dispatch(_store_actions_Editing__WEBPACK_IMPORTED_MODULE_3__.fetchImage(key, page)),\n        Select: (div)=>dispatch(_store_actions_Editing__WEBPACK_IMPORTED_MODULE_3__.SelectSuccess(div))\n    };\n};\n// export default Writing\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,react_redux__WEBPACK_IMPORTED_MODULE_2__.connect)(mapStateToProps, mapDispatchToProps)(GifFetching));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/components/controlbarcomps/ImagesFet.js\n"));

/***/ })

});