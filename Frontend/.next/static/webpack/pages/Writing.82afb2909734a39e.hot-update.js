"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Writing",{

/***/ "./pages/Writing.js":
/*!**************************!*\
  !*** ./pages/Writing.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../public/components/Controlbar */ \"./public/components/Controlbar.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/actions/Editing */ \"./store/actions/Editing.js\");\n\n\n\n\n\nclass Writing extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    render() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"article\",\n                    contentEditable: \"true\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"blogContent\",\n                        id: \"1\",\n                        contentEditable: \"true\",\n                        children: \"Dispatch on next.js redux vesion 2.2.02.vs\"\n                    }, void 0, false, {\n                        fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                        lineNumber: 467,\n                        columnNumber: 17\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 465,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 479,\n                    columnNumber: 13\n                }, this)\n            ]\n        }, void 0, true);\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            ContentElement: null,\n            active: this.props.Font,\n            ID_index: 1,\n            ID_index_HBQL: 1,\n            selected: null,\n            clicked: \"blogContent\",\n            Delete: 0,\n            Med_selection: null\n        };\n        // }\n        this.componentDidUpdate = ()=>{\n            let article = document.getElementsByClassName(\"article\")[0];\n            let check = document.getElementsByClassName(\"article\")[0].children;\n            let selected = document.getElementById(this.state.selected);\n            for(let j = 0; j < check.length; j++){\n                check[j].classList.remove(\"SelectedDiv\");\n            }\n            if (this.state.selected !== null) {\n                let selected = document.getElementById(this.state.selected);\n                try {\n                    selected.classList.add(\"SelectedDiv\");\n                } catch (e) {\n                    console.log(\"TRY CATCH ERROR STATE IS UNDEFINED\");\n                }\n            } else {\n                for(let j = 0; j < check.length; j++){\n                    check[j].classList.remove(\"SelectedDiv\");\n                }\n            }\n            if (this.props.Font !== this.state.clicked) {\n                let NewElem = document.createElement(\"div\");\n                if (this.props.Font.includes(\"-\")) {\n                    NewElem.className = this.props.Font.toString().split(\"-\")[0];\n                } else {\n                    NewElem.className = this.props.Font;\n                }\n                if (this.props.Insert == \"Up\") {\n                    if (NewElem.className == \"list\") {\n                        NewElem.innerHTML = \"<ul><li>Something<li/><ul/>\";\n                        NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                        article.insertBefore(NewElem, selected);\n                    } else {\n                        NewElem.innerText = \"Your Heading\";\n                        NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                        article.insertBefore(NewElem, selected);\n                    }\n                // console.log(this.state.selected)\n                } else {\n                    NewElem.innerText = \"Your Heading\";\n                    NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                    try {\n                        article.insertBefore(NewElem, selected.nextSibling);\n                    } catch (e) {\n                        article.appendChild(NewElem);\n                    }\n                }\n                let ID_increament = this.state.ID_index_HBQL + 1;\n                this.setState({\n                    clicked: this.props.Font,\n                    ID_index_HBQL: ID_increament\n                });\n            }\n            if (this.props.Selection !== this.state.Med_selection) {\n                console.log(this.props.Selection);\n                console.log(this.props.Selection.length);\n                this.setState({\n                    Med_selection: this.props.Selection\n                }, ()=>{\n                    if (this.props.Insert == \"Up\") {\n                        let NewMedElem = this.props.Selection;\n                        NewMedElem.id = \"\".concat(this.state.ID_index_HBQL, \"II\");\n                        article.insertBefore(this.props.Selection, selected);\n                    // console.log(this.state.selected)\n                    } else {\n                        let NewMedElem = this.props.Selection;\n                        NewMedElem.id = \"\".concat(this.state.ID_index_HBQL, \"II\");\n                        try {\n                            article.insertBefore(NewMedElem, selected.nextSibling);\n                        } catch (e) {\n                            article.appendChild(NewMedElem);\n                        }\n                    }\n                    let ID_increament = this.state.ID_index_HBQL + 1;\n                    this.setState({\n                        clicked: this.props.Font,\n                        ID_index_HBQL: ID_increament\n                    });\n                });\n            }\n            for(let k = 0; k < check.length; k++){\n                check[k].onclick = ()=>{\n                    // check[k+1].setAttribute(\"contenteditable\",false)\n                    try {\n                        check[k].setAttribute(\"contenteditable\", true);\n                        if (check[k + 1] !== undefined && check[k + 1] !== null) {\n                            check[k + 1].setAttribute(\"contenteditable\", false);\n                        }\n                        this.setState({\n                            selected: check[k].id\n                        });\n                    } catch (e) {\n                        console.log(\"TRY AND CATCH FUNCTION ERROR\");\n                    }\n                };\n            }\n        // let Font=this.props.Font\n        };\n        this.componentDidMount = ()=>{\n            let article = document.getElementsByClassName(\"article\")[0];\n            // let content=document.getElementsByClassName(\"blog-content\")\n            let content = document.getElementsByClassName(\"article\")[0].children;\n            document.getElementById(\"Bin\").addEventListener(\"click\", ()=>{\n                if (this.state.selected !== null && this.state.selected !== undefined && article.children.length !== 1) {\n                    // this.setState({\n                    //     Delete:this.props.Delete\n                    // })\n                    console.log(document.getElementById(\"1\"));\n                    let del = document.getElementById(this.state.selected);\n                    console.log(this.state.selected);\n                    console.log(del);\n                    // console.log(del.parentElement)\n                    del.parentElement.removeChild(del);\n                    for(let k = 0; k < content.length; k++){\n                        content[k].onclick = ()=>{\n                            content[k].setAttribute(\"contenteditable\", true);\n                            if (content[k + 1] !== undefined && content[k + 1] !== null) {\n                                content[k + 1].setAttribute(\"contenteditable\", false);\n                            }\n                            this.setState({\n                                selected: content[k].id\n                            });\n                        };\n                    }\n                }\n            });\n            // ----------------------------------------\n            // To stop HTML from breaking if user pastes some text other than writing it\n            var ce = article;\n            ce.addEventListener(\"paste\", function(e) {\n                e.preventDefault();\n                var text = e.clipboardData.getData(\"text/plain\");\n                document.execCommand(\"insertText\", false, text);\n            });\n            // ------------------------------------\n            // ----------------------------------------------\n            // Event listeners on article \n            for(let k = 0; k < content.length; k++){\n                content[k].onclick = ()=>{\n                    content[k].setAttribute(\"contenteditable\", true);\n                    if (content[k + 1] !== undefined && content[k + 1] !== null) {\n                        content[k + 1].setAttribute(\"contenteditable\", false);\n                    }\n                    this.setState({\n                        selected: content[k].id\n                    });\n                };\n            }\n            article.addEventListener(\"input\", (e)=>{\n                if (e.inputType == \"insertParagraph\" || e.data == null) {\n                    let spans = document.getElementsByTagName(\"span\");\n                    for(let i = 0; i < spans.length; i++){\n                        spans[i].style = spans[i].parentElement.style;\n                    // spans[i].className=spans[i].parentElement.className\n                    }\n                    for(let j = 0; j < article.childElementCount; j++){\n                        if (j !== 0) {\n                            if (article.children[j].id == article.children[j - 1].id) {\n                                if (article.children[j].innerText.trim() !== \"\") {\n                                    article.children[j].id = \"F\".concat(article.children[j].id);\n                                    article.children[j - 1].id = \"B\".concat(article.children[j - 1].id);\n                                } else {\n                                    var idInd = this.state.ID_index + 1;\n                                    this.setState({\n                                        ID_index: idInd\n                                    });\n                                    article.children[j].id = idInd;\n                                }\n                                this.setState({\n                                    selected: null\n                                });\n                                for(let k = 0; k < content.length; k++){\n                                    content[k].onclick = ()=>{\n                                        content[k].setAttribute(\"contenteditable\", true);\n                                        content[k + 1].setAttribute(\"contenteditable\", false);\n                                        this.setState({\n                                            selected: content[k].id\n                                        });\n                                    };\n                                }\n                            }\n                        }\n                    }\n                } else {}\n                // if(article.firstChild.innerText.trim().length==0){\n                //     article.firstChild.innerText=\"~\"\n                // }\n                if (article.children.length == 0) {\n                    let content = document.createElement(\"div\");\n                    content.className = \"blogContent\";\n                    content.id = \"1\";\n                    article.appendChild(content);\n                }\n            });\n        };\n        // this.heading = this.heading.bind(this);\n        // this.componentDidMount=this.componentDidMount.bind(this)\n        this.selectedDivRedux = (div)=>{\n            this.props.Set(div);\n        };\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        Font: state.Edit.Font,\n        Insert: state.Edit.Insert,\n        Delete: state.Edit.Delete,\n        Selection: state.Edit.Selected\n    };\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        Set: (div)=>dispatch(_store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__.SelectSuccess(div))\n    };\n};\n// export default Writing;\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(mapStateToProps, mapDispatchToProps)(Writing));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/Writing.js\n"));

/***/ })

});