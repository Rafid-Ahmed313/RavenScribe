"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Writing",{

/***/ "./pages/Writing.js":
/*!**************************!*\
  !*** ./pages/Writing.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/src/_define_property.mjs */ \"./node_modules/@swc/helpers/src/_define_property.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../public/components/Controlbar */ \"./public/components/Controlbar.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/actions/Editing */ \"./store/actions/Editing.js\");\n\n\n\n\n\n\nclass Writing extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    render() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"article\",\n                    contentEditable: \"true\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"blog-content\",\n                        id: \"1\",\n                        children: \"This is part 1 This is part 2 This is part 3\"\n                    }, void 0, false, {\n                        fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                        lineNumber: 628,\n                        columnNumber: 17\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 627,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 637,\n                    columnNumber: 13\n                }, this)\n            ]\n        }, void 0, true);\n    }\n    constructor(props){\n        super(props);\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"state\", {\n            WriteEdCont: null,\n            active: this.props.Font,\n            ID_index: 0,\n            selected: null\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"Delete\", ()=>{\n            let content = document.querySelector(\".article\");\n            // let temp = document.createElement(\"div\")\n            // temp.className = \"temp\"\n            console.log(this.state.selected);\n            try {\n                // content.replaceChild(temp, this.state.selected)\n                content.removeChild(this.state.selected);\n            } catch (err) {\n                console.log(err);\n            }\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"text\", ()=>{\n            this.setState({\n                active: \"blog-content\"\n            });\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"heading\", ()=>{\n            this.setState({\n                active: \"article-heading\"\n            });\n            console.log(\"updated\");\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"subheading\", ()=>{\n            this.setState({\n                active: \"subHeading\"\n            });\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"list\", ()=>{\n            this.setState({\n                active: \"list\"\n            });\n        });\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"quote\", ()=>{\n            this.setState({\n                active: \"quotes\"\n            });\n        });\n        // ReIndex=()=>{\n        //     let content=document.getElementsByClassName(\"blog-content\")\n        //     for(let i=0;i<content.length;i++){\n        //         let self=this;\n        //             content[i].addEventListener(\"click\",function(e){\n        //                 self.setState({\n        //                     WriteEdCont:[e.target.innerHTML,content[i].id]\n        //                 },()=>{\n        //                     console.log(\"nothing\")\n        //                     // article.addEventListener(\"input\",function(e){\n        //                     //     console.log(self.state.WriteEdCont)\n        //                     // })\n        //                 })\n        //             })\n        //         }\n        // }\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"componentDidUpdate\", ()=>{});\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, \"componentDidMount\", ()=>{\n            console.log(\"The state from redux printed is \".concat(this.state.active));\n            let article = document.getElementsByClassName(\"article\")[0];\n            let content = document.getElementsByClassName(\"blog-content\");\n            var ce = article;\n            ce.addEventListener(\"paste\", function(e) {\n                e.preventDefault();\n                var text = e.clipboardData.getData(\"text/plain\");\n                document.execCommand(\"insertText\", false, text);\n            });\n            // for(let i=0;i<content.length;i++){\n            article.addEventListener(\"click\", (e)=>{\n                this.selectedDivRedux(e.target);\n                this.setState({\n                    WriteEdCont: [\n                        e.target.innerHTML,\n                        e.target.id\n                    ],\n                    selected: e.target\n                }, ()=>{\n                // article.addEventListener(\"input\",function(e){\n                //     console.log(self.state.WriteEdCont)\n                // })\n                });\n            });\n            // for(let i=0;i<content.length;i++){\n            //     let self=this;\n            //         content[i].addEventListener(\"click\",function(e){\n            //             console.log(e.target)\n            //             console.log(content[i])\n            //             console.log(e.target)\n            //             self.setState({\n            //                 WriteEdCont:[e.target.innerHTML,content[i].id],\n            //                 selected:e.target\n            //             },()=>{\n            //                 // article.addEventListener(\"input\",function(e){\n            //                 //     console.log(self.state.WriteEdCont)\n            //                 // })\n            //             })\n            //         })\n            //     }\n            const aff = this;\n            article.addEventListener(\"input\", function(e) {\n                if (e.inputType == \"insertParagraph\") {\n                    for(let j = 0; j < article.childElementCount; j++){\n                        // const index=article.children[j]\n                        if (j !== 0) {\n                            if (article.children[j].id == article.children[j - 1].id) {\n                                article.children[j].id = \"\".concat(article.children[j].id, \"D\");\n                                console.log(article.children[j]);\n                            }\n                        }\n                    }\n                }\n                if (document.getElementById(aff.state.WriteEdCont[1]) !== null && aff.state.active !== \"blog-content\") {\n                    console.log(\"state \".concat(aff.state.WriteEdCont));\n                    let extended = document.getElementById(aff.state.WriteEdCont[1]);\n                    let prev = aff.state.WriteEdCont[0];\n                    console.log(extended.innerHTML);\n                    console.log(aff.state.WriteEdCont[0]);\n                    // var s = extended.innerHTML;\n                    // var index = 10;\n                    // s = s.substring(0, index) + 'jakalalalallala' + s.substring(index + 1);\n                    // extended.innerHTML=s\n                    // console.log(extended.innerHTML)\n                    // extended.innerHTML[10]=\"jakalalalallala\"\n                    // ---------------------------ISOLATION----------------------------------------------\n                    // ---------------------------ISOLATION----------------------------------------------\n                    for(let i = 0; i < extended.innerHTML.length; i++){\n                        let extended1 = document.getElementById(aff.state.WriteEdCont[1]);\n                        let prev1 = aff.state.WriteEdCont[0];\n                        let str = extended1.innerHTML;\n                        let index = i;\n                        if (prev1[i] !== extended1.innerHTML[i]) {\n                            let self = aff;\n                            // extended.innerHTML[i]==`</div><div class=\"article-heading\">${extended.innerHTML[i]}</div><div class=\"blog-content>\"`\n                            let id = extended1.id;\n                            let conditionfst = str.substring(0, index) !== \"\";\n                            // let fnlstr=str.substring(0,index)+`</div><div class=\"blog-content>`+str.substring(index+1)\n                            if (conditionfst) {\n                                var divfrst = document.createElement(\"div\");\n                                divfrst.className = \"blog-content\";\n                                divfrst.innerHTML = str.substring(0, index);\n                            }\n                            var current = document.createElement(\"div\");\n                            current.className = self.state.active;\n                            current.innerText = extended1.innerHTML[i];\n                            let condition = str.substring(index + 1) !== \"\";\n                            if (condition) {\n                                var divsnd = document.createElement(\"div\");\n                                divsnd.className = \"blog-content\";\n                                divsnd.innerHTML = str.substring(index + 1);\n                            }\n                            if (extended1.id[0] !== \"b\") {\n                                if (conditionfst) {\n                                    divfrst.id = \"bf\".concat(id).concat(self.state.ID_index);\n                                }\n                                if (condition) {\n                                    divsnd.id = \"bl\".concat(id).concat(self.state.ID_index);\n                                }\n                            } else {\n                                // let num=id.slice(-1)\n                                let nxtID = \"b\".concat(extended1.id).concat(self.state.ID_index);\n                                if (conditionfst) {\n                                    divfrst.id = \"\".concat(nxtID.replace(\"l\", \"f\"));\n                                }\n                                if (condition) {\n                                    divsnd.id = \"\".concat(nxtID.replace(\"f\", \"l\"));\n                                }\n                            }\n                            self.setState({\n                                ID_index: self.state.ID_index + 1\n                            });\n                            let elem = document.getElementById(extended1.id.replace(\"f\", \"l\"));\n                            let save = extended1.nextSibling;\n                            let parent = extended1.parentNode;\n                            if (self.state.active !== \"blog-content\") {\n                                if (extended1.id.includes(\"b\")) {\n                                    parent.removeChild(extended1);\n                                    if (conditionfst) {\n                                        parent.insertBefore(divfrst, save);\n                                    }\n                                    if (conditionfst && condition) {\n                                        parent.insertBefore(current, save);\n                                        console.log(save);\n                                    } else {\n                                        parent.insertBefore(current, save);\n                                    }\n                                    if (condition) {\n                                        parent.insertBefore(divsnd, save);\n                                    }\n                                } else {\n                                    parent.removeChild(extended1);\n                                    if (conditionfst) {\n                                        parent.appendChild(divfrst);\n                                    }\n                                    parent.insertBefore(current, save);\n                                    if (condition) {\n                                        parent.appendChild(divsnd);\n                                    }\n                                }\n                                self.text();\n                            }\n                            // --------------------cursor_function---------------\n                            let tag = document.getElementsByClassName(self.state.active);\n                            console.log(tag);\n                            let setpos = document.createRange();\n                            let set = window.getSelection();\n                            setpos.setStart(tag[0], 1);\n                            setpos.collapse(true);\n                            set.removeAllRanges();\n                            set.addRange(setpos);\n                            tag[0].focus();\n                            // ---------------------------\n                            // let bst=content.\n                            // console.log(fnlstr)\n                            // extended.innerHTML=fnlstr\n                            console.log(extended1.innerHTML);\n                            // this.ReIndex()\n                            for(let i1 = 0; i1 < content.length; i1++){\n                                let jap = aff;\n                                content[i1].addEventListener(\"click\", function(e) {\n                                    try {\n                                        jap.selectedDivRedux(e.target);\n                                        jap.setState({\n                                            WriteEdCont: [\n                                                e.target.innerHTML,\n                                                content[i1].id\n                                            ],\n                                            selected: e.target\n                                        }, ()=>{\n                                            console.log(jap.state.selected);\n                                        });\n                                    } catch (e1) {\n                                        console.log(\"ERROR TO BE NOTED\");\n                                        console.log(e1);\n                                    }\n                                });\n                            }\n                            for(let j1 = 0; j1 < article.childElementCount; j1++){\n                                let self1 = aff;\n                                article.children[j1].addEventListener(\"click\", function(e) {\n                                    console.log(article.children[j1]);\n                                    self1.selectedDivRedux(e.target);\n                                    self1.setState({\n                                        WriteEdCont: [\n                                            e.target.innerHTML,\n                                            article.children[j1].id\n                                        ],\n                                        selected: e.target\n                                    });\n                                });\n                            }\n                            break;\n                        }\n                    }\n                // if(extended[i]!==prev[i]){\n                //     console.log(prev[i])\n                // }\n                }\n            // for(let j=0;j<article.childElementCount;j++){\n            //     let self=aff;\n            //     if((article.children[j].innerText.replace(/(\\r\\n|\\n|\\r)/gm, \"\").trim())==\"\"){\n            //         console.log(\"controlled \")\n            //         article.children[j].setAttribute(\"class\",self.state.active)\n            //     }\n            //     article.children[j].addEventListener(\"click\",function(e){\n            //         console.log(article.children[j])\n            //         self.setState({\n            //             selected:e.target\n            //         })\n            //     })\n            //     }\n            });\n        });\n        this.heading = this.heading.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.selectedDivRedux = (div)=>{\n            this.props.Set(div);\n        };\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        Font: state.Edit.Font\n    };\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        Set: (div)=>dispatch(_store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__.SelectSuccess(div))\n    };\n};\n// export default Writing;\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(mapStateToProps, mapDispatchToProps)(Writing));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/Writing.js\n"));

/***/ })

});