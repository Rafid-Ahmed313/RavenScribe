"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Writing",{

/***/ "./pages/Writing.js":
/*!**************************!*\
  !*** ./pages/Writing.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../public/components/Controlbar */ \"./public/components/Controlbar.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/actions/Editing */ \"./store/actions/Editing.js\");\n\n\n\n\n\nclass Writing extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    render() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"article\",\n                    contentEditable: \"true\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"blogContent\",\n                        id: \"1\",\n                        contentEditable: \"true\",\n                        children: \"Dispatch on next.js redux vesion 2.2.02.vs\"\n                    }, void 0, false, {\n                        fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                        lineNumber: 497,\n                        columnNumber: 17\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 495,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_public_components_Controlbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/rafid/RavenScribe/Frontend/pages/Writing.js\",\n                    lineNumber: 509,\n                    columnNumber: 13\n                }, this)\n            ]\n        }, void 0, true);\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            ContentElement: null,\n            active: this.props.Font,\n            ID_index: 1,\n            ID_index_HBQL: 1,\n            selected: null,\n            clicked: \"blogContent\",\n            Delete: 0,\n            Med_selection: null\n        };\n        // }\n        this.componentDidUpdate = ()=>{\n            let article = document.getElementsByClassName(\"article\")[0];\n            let check = document.getElementsByClassName(\"article\")[0].children;\n            let selected = document.getElementById(this.state.selected);\n            // let spans= document.getElementsByTagName(\"span\")\n            // Array.from(spans).forEach(element => {\n            //     element.style=element.parentElement.style\n            // });\n            for(let j = 0; j < check.length; j++){\n                check[j].classList.remove(\"SelectedDiv\");\n            }\n            if (this.state.selected !== null) {\n                let selected = document.getElementById(this.state.selected);\n                try {\n                    selected.classList.add(\"SelectedDiv\");\n                } catch (e) {\n                    console.log(\"TRY CATCH ERROR STATE IS UNDEFINED\");\n                }\n            } else {\n                for(let j = 0; j < check.length; j++){\n                    check[j].classList.remove(\"SelectedDiv\");\n                }\n            }\n            if (this.props.Font !== this.state.clicked) {\n                let NewElem = document.createElement(\"div\");\n                if (this.props.Font.includes(\"-\")) {\n                    NewElem.className = this.props.Font.toString().split(\"-\")[0];\n                } else {\n                    NewElem.className = this.props.Font;\n                }\n                if (this.props.Insert == \"Up\") {\n                    if (NewElem.className == \"list\") {\n                        let ListElem = document.createElement(\"li\");\n                        ListElem.innerText = \"List Item\";\n                        let UnorderedList = document.createElement(\"ul\");\n                        UnorderedList.appendChild(ListElem);\n                        // UnorderedList.innerHTML=ListElem\n                        NewElem.appendChild(UnorderedList);\n                        // NewElem.innerHTML=\"<ul><li>Something<li/><ul/>\"\n                        NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                        article.insertBefore(NewElem, selected);\n                    } else {\n                        NewElem.innerText = \"Your Heading\";\n                        NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                        article.insertBefore(NewElem, selected);\n                    }\n                // console.log(this.state.selected)\n                } else {\n                    if (NewElem.className == \"list\") {\n                        let ListElem = document.createElement(\"li\");\n                        ListElem.innerText = \"List Item\";\n                        let UnorderedList = document.createElement(\"ul\");\n                        UnorderedList.appendChild(ListElem);\n                        // UnorderedList.innerHTML=ListElem\n                        NewElem.appendChild(UnorderedList);\n                    } else {\n                        NewElem.innerText = \"Your Heading\";\n                    }\n                    NewElem.id = \"\".concat(this.state.ID_index_HBQL, \"DD\");\n                    try {\n                        article.insertBefore(NewElem, selected.nextSibling);\n                    } catch (e) {\n                        article.appendChild(NewElem);\n                    }\n                }\n                let ID_increament = this.state.ID_index_HBQL + 1;\n                this.setState({\n                    clicked: this.props.Font,\n                    ID_index_HBQL: ID_increament\n                });\n            }\n            if (this.props.Selection !== this.state.Med_selection) {\n                console.log(this.props.Selection);\n                console.log(this.props.Selection.length);\n                this.setState({\n                    Med_selection: this.props.Selection\n                }, ()=>{\n                    if (this.props.Insert == \"Up\") {\n                        let NewMedElem = this.props.Selection;\n                        NewMedElem.id = \"\".concat(this.state.ID_index_HBQL, \"II\");\n                        article.insertBefore(this.props.Selection, selected);\n                    // console.log(this.state.selected)\n                    } else {\n                        let NewMedElem = this.props.Selection;\n                        NewMedElem.id = \"\".concat(this.state.ID_index_HBQL, \"II\");\n                        try {\n                            article.insertBefore(NewMedElem, selected.nextSibling);\n                        } catch (e) {\n                            article.appendChild(NewMedElem);\n                        }\n                    }\n                    let ID_increament = this.state.ID_index_HBQL + 1;\n                    this.setState({\n                        clicked: this.props.Font,\n                        ID_index_HBQL: ID_increament\n                    });\n                });\n            }\n            for(let k = 0; k < check.length; k++){\n                check[k].onclick = ()=>{\n                    // check[k+1].setAttribute(\"contenteditable\",false)\n                    try {\n                        check[k].setAttribute(\"contenteditable\", true);\n                        if (check[k + 1] !== undefined && check[k + 1] !== null) {\n                            check[k + 1].setAttribute(\"contenteditable\", false);\n                        }\n                        this.setState({\n                            selected: check[k].id\n                        });\n                    } catch (e) {\n                        console.log(\"TRY AND CATCH FUNCTION ERROR\");\n                    }\n                };\n            }\n        // let Font=this.props.Font\n        };\n        this.componentDidMount = ()=>{\n            let article = document.getElementsByClassName(\"article\")[0];\n            // let content=document.getElementsByClassName(\"blog-content\")\n            let content = document.getElementsByClassName(\"article\")[0].children;\n            document.getElementById(\"Bin\").addEventListener(\"click\", ()=>{\n                if (this.state.selected !== null && this.state.selected !== undefined && article.children.length !== 1) {\n                    // this.setState({\n                    //     Delete:this.props.Delete\n                    // })\n                    console.log(document.getElementById(\"1\"));\n                    let del = document.getElementById(this.state.selected);\n                    console.log(this.state.selected);\n                    console.log(del);\n                    // console.log(del.parentElement)\n                    del.parentElement.removeChild(del);\n                    for(let k = 0; k < content.length; k++){\n                        content[k].onclick = ()=>{\n                            content[k].setAttribute(\"contenteditable\", true);\n                            if (content[k + 1] !== undefined && content[k + 1] !== null) {\n                                content[k + 1].setAttribute(\"contenteditable\", false);\n                            }\n                            this.setState({\n                                selected: content[k].id\n                            });\n                        };\n                    }\n                }\n            });\n            // ----------------------------------------\n            // To stop HTML from breaking if user pastes some text other than writing it\n            var ce = article;\n            ce.addEventListener(\"paste\", function(e) {\n                e.preventDefault();\n                var text = e.clipboardData.getData(\"text/plain\");\n                document.execCommand(\"insertText\", false, text);\n            });\n            // ------------------------------------\n            // ----------------------------------------------\n            // Event listeners on article \n            for(let k = 0; k < content.length; k++){\n                content[k].onclick = ()=>{\n                    content[k].setAttribute(\"contenteditable\", true);\n                    if (content[k + 1] !== undefined && content[k + 1] !== null) {\n                        content[k + 1].setAttribute(\"contenteditable\", false);\n                    }\n                    this.setState({\n                        selected: content[k].id\n                    });\n                };\n            }\n            article.addEventListener(\"input\", (e)=>{\n                if (e.inputType == \"insertParagraph\" || e.data == null) {\n                    let spans = document.getElementsByTagName(\"span\");\n                    for(let i = 0; i < spans.length; i++){\n                        console.log(spans[i].style);\n                        spans[i].style = spans[i].parentElement.style;\n                        spans[i].style.fontFamily = spans[i].parentElement.style.fontFamily;\n                    // spans[i].className=spans[i].parentElement.className\n                    }\n                    for(let j = 0; j < article.childElementCount; j++){\n                        if (j !== 0) {\n                            if (article.children[j].id == article.children[j - 1].id) {\n                                if (article.children[j].innerText.trim() !== \"\") {\n                                    article.children[j].id = \"F\".concat(article.children[j].id);\n                                    article.children[j - 1].id = \"B\".concat(article.children[j - 1].id);\n                                } else {\n                                    var idInd = this.state.ID_index + 1;\n                                    this.setState({\n                                        ID_index: idInd\n                                    });\n                                    article.children[j].id = idInd;\n                                }\n                                this.setState({\n                                    selected: null\n                                });\n                                for(let k = 0; k < content.length; k++){\n                                    content[k].onclick = ()=>{\n                                        content[k].setAttribute(\"contenteditable\", true);\n                                        content[k + 1].setAttribute(\"contenteditable\", false);\n                                        this.setState({\n                                            selected: content[k].id\n                                        });\n                                    };\n                                }\n                            }\n                        }\n                    }\n                } else {}\n                // if(article.firstChild.innerText.trim().length==0){\n                //     article.firstChild.innerText=\"~\"\n                // }\n                if (article.children.length == 0) {\n                    let content = document.createElement(\"div\");\n                    content.className = \"blogContent\";\n                    content.id = \"1\";\n                    article.appendChild(content);\n                }\n            });\n        };\n        // this.heading = this.heading.bind(this);\n        // this.componentDidMount=this.componentDidMount.bind(this)\n        this.selectedDivRedux = (div)=>{\n            this.props.Set(div);\n        };\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        Font: state.Edit.Font,\n        Insert: state.Edit.Insert,\n        Delete: state.Edit.Delete,\n        Selection: state.Edit.Selected\n    };\n};\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        Set: (div)=>dispatch(_store_actions_Editing__WEBPACK_IMPORTED_MODULE_4__.SelectSuccess(div))\n    };\n};\n// export default Writing;\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(mapStateToProps, mapDispatchToProps)(Writing));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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STFFO1FBQ25CO0lBS0o7QUE2ZUo7QUFJQSxNQUFNMkUsa0JBQWtCLENBQUNyRTtJQUNyQixPQUFPO1FBRUhHLE1BQUtILE1BQU1zRSxLQUFLbkU7UUFDaEIyQixRQUFPOUIsTUFBTXNFLEtBQUt4QztRQUNsQnRCLFFBQU9SLE1BQU1zRSxLQUFLOUQ7UUFDbEIrQixXQUFVdkMsTUFBTXNFLEtBQUtDO0lBS3pCO0FBQ0o7QUFHQSxNQUFNQyxxQkFBcUIsQ0FBQ0M7SUFDeEIsT0FBTztRQUNITCxLQUFLLENBQUMxRSxNQUFRK0UsU0FBU2xGLGlFQUFxQm1GLENBQUNoRjtJQUlqRDtBQUNKO0FBRUEsMEJBQTBCO0FBQzFCLCtEQUFnQkosb0RBQU9BLENBQUMrRSxpQkFBZ0JHLG9CQUFvQmhGLFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvV3JpdGluZy5qcz9mMWFkIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IENvbnRyb2xiYXIgZnJvbSAnLi4vcHVibGljL2NvbXBvbmVudHMvQ29udHJvbGJhcic7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9zdG9yZS9hY3Rpb25zL0VkaXRpbmcnXG5jbGFzcyBXcml0aW5nIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgLy8gdGhpcy5oZWFkaW5nID0gdGhpcy5oZWFkaW5nLmJpbmQodGhpcyk7XG4gICAgICAgIC8vIHRoaXMuY29tcG9uZW50RGlkTW91bnQ9dGhpcy5jb21wb25lbnREaWRNb3VudC5iaW5kKHRoaXMpXG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZERpdlJlZHV4PShkaXYpPT57XG4gICAgICAgICAgICB0aGlzLnByb3BzLlNldChkaXYpXG4gICAgICAgIH1cblxuXG5cblxuICAgIH1cblxuXG4gICAgc3RhdGUgPSB7XG4gICAgICAgIENvbnRlbnRFbGVtZW50Om51bGwsXG4gICAgICAgIGFjdGl2ZTp0aGlzLnByb3BzLkZvbnQsXG4gICAgICAgIElEX2luZGV4OjEsXG4gICAgICAgIElEX2luZGV4X0hCUUw6MSxcbiAgICAgICAgc2VsZWN0ZWQ6bnVsbCxcbiAgICAgICAgY2xpY2tlZDonYmxvZ0NvbnRlbnQnLFxuICAgICAgICBEZWxldGU6MCxcbiAgICAgICAgTWVkX3NlbGVjdGlvbjpudWxsLFxuXG5cbiAgICAgIH1cblxuXG5cbiAgICAvLyB9XG5cbiAgICBjb21wb25lbnREaWRVcGRhdGU9KCk9PntcblxuXG5cbiAgICAgICAgbGV0IGFydGljbGU9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFydGljbGVcIilbMF1cbiAgICAgICAgbGV0IGNoZWNrPWRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhcnRpY2xlXCIpWzBdLmNoaWxkcmVuXG4gICAgICAgIGxldCBzZWxlY3RlZD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnN0YXRlLnNlbGVjdGVkKVxuICAgICAgICAgICAgICBcbiAgICAgICAgLy8gbGV0IHNwYW5zPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNwYW5cIilcblxuICAgICAgICAvLyBBcnJheS5mcm9tKHNwYW5zKS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAvLyAgICAgZWxlbWVudC5zdHlsZT1lbGVtZW50LnBhcmVudEVsZW1lbnQuc3R5bGVcbiAgICAgICAgLy8gfSk7XG5cbiAgICAgICAgZm9yKGxldCBqPTA7ajxjaGVjay5sZW5ndGg7aisrKXtcbiAgICAgICAgICAgIGNoZWNrW2pdLmNsYXNzTGlzdC5yZW1vdmUoXCJTZWxlY3RlZERpdlwiKVxuICAgICAgICB9XG5cbiAgICAgICAgXG5cbiAgICAgICAgaWYodGhpcy5zdGF0ZS5zZWxlY3RlZCE9PW51bGwpe1xuICAgICAgICAgICAgbGV0IHNlbGVjdGVkPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuc3RhdGUuc2VsZWN0ZWQpXG4gICAgICAgICAgICB0cnl7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQuY2xhc3NMaXN0LmFkZChcIlNlbGVjdGVkRGl2XCIpXG5cblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2goZSl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAgICAgICAgIFwiVFJZIENBVENIIEVSUk9SIFNUQVRFIElTIFVOREVGSU5FRFwiXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgZm9yKGxldCBqPTA7ajxjaGVjay5sZW5ndGg7aisrKXtcbiAgICAgICAgICAgICAgICBjaGVja1tqXS5jbGFzc0xpc3QucmVtb3ZlKFwiU2VsZWN0ZWREaXZcIilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIGlmKHRoaXMucHJvcHMuRm9udCE9PXRoaXMuc3RhdGUuY2xpY2tlZCl7XG4gICAgICAgICAgICBsZXQgTmV3RWxlbT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG5cbiAgICAgICAgICAgIGlmKHRoaXMucHJvcHMuRm9udC5pbmNsdWRlcyhcIi1cIikpe1xuICAgICAgICAgICAgICAgIE5ld0VsZW0uY2xhc3NOYW1lPSh0aGlzLnByb3BzLkZvbnQpLnRvU3RyaW5nKCkuc3BsaXQoXCItXCIpWzBdXG5cblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICBOZXdFbGVtLmNsYXNzTmFtZT10aGlzLnByb3BzLkZvbnRcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICBpZih0aGlzLnByb3BzLkluc2VydD09XCJVcFwiKXtcbiAgICAgICAgICAgICAgICBpZihOZXdFbGVtLmNsYXNzTmFtZT09J2xpc3QnKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IExpc3RFbGVtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKVxuICAgICAgICAgICAgICAgICAgICBMaXN0RWxlbS5pbm5lclRleHQ9XCJMaXN0IEl0ZW1cIlxuICAgICAgICAgICAgICAgICAgICBsZXQgVW5vcmRlcmVkTGlzdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIilcbiAgICAgICAgICAgICAgICAgICAgVW5vcmRlcmVkTGlzdC5hcHBlbmRDaGlsZChMaXN0RWxlbSlcbiAgICAgICAgICAgICAgICAgICAgLy8gVW5vcmRlcmVkTGlzdC5pbm5lckhUTUw9TGlzdEVsZW1cbiAgICAgICAgICAgICAgICAgICAgTmV3RWxlbS5hcHBlbmRDaGlsZChVbm9yZGVyZWRMaXN0KVxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAvLyBOZXdFbGVtLmlubmVySFRNTD1cIjx1bD48bGk+U29tZXRoaW5nPGxpLz48dWwvPlwiXG4gICAgICAgICAgICAgICAgICAgIE5ld0VsZW0uaWQ9YCR7dGhpcy5zdGF0ZS5JRF9pbmRleF9IQlFMfUREYFxuICAgICAgICAgICAgICAgICAgICBhcnRpY2xlLmluc2VydEJlZm9yZShOZXdFbGVtLHNlbGVjdGVkKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICBOZXdFbGVtLmlubmVyVGV4dD1cIllvdXIgSGVhZGluZ1wiXG4gICAgICAgICAgICAgICAgICAgIE5ld0VsZW0uaWQ9YCR7dGhpcy5zdGF0ZS5JRF9pbmRleF9IQlFMfUREYFxuICAgICAgICAgICAgICAgICAgICBhcnRpY2xlLmluc2VydEJlZm9yZShOZXdFbGVtLHNlbGVjdGVkKVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICBcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXRlLnNlbGVjdGVkKVxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIGlmKE5ld0VsZW0uY2xhc3NOYW1lPT0nbGlzdCcpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgTGlzdEVsZW09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpXG4gICAgICAgICAgICAgICAgICAgIExpc3RFbGVtLmlubmVyVGV4dD1cIkxpc3QgSXRlbVwiXG4gICAgICAgICAgICAgICAgICAgIGxldCBVbm9yZGVyZWRMaXN0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKVxuICAgICAgICAgICAgICAgICAgICBVbm9yZGVyZWRMaXN0LmFwcGVuZENoaWxkKExpc3RFbGVtKVxuICAgICAgICAgICAgICAgICAgICAvLyBVbm9yZGVyZWRMaXN0LmlubmVySFRNTD1MaXN0RWxlbVxuICAgICAgICAgICAgICAgICAgICBOZXdFbGVtLmFwcGVuZENoaWxkKFVub3JkZXJlZExpc3QpXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIE5ld0VsZW0uaW5uZXJUZXh0PVwiWW91ciBIZWFkaW5nXCJcblxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIE5ld0VsZW0uaWQ9YCR7dGhpcy5zdGF0ZS5JRF9pbmRleF9IQlFMfUREYFxuICAgICAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICAgICAgYXJ0aWNsZS5pbnNlcnRCZWZvcmUoTmV3RWxlbSxzZWxlY3RlZC5uZXh0U2libGluZylcblxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoKGUpe1xuICAgICAgICAgICAgICAgICAgICBhcnRpY2xlLmFwcGVuZENoaWxkKE5ld0VsZW0pXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgICBsZXQgSURfaW5jcmVhbWVudD10aGlzLnN0YXRlLklEX2luZGV4X0hCUUwrMVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgY2xpY2tlZDp0aGlzLnByb3BzLkZvbnQsXG4gICAgICAgICAgICAgICAgSURfaW5kZXhfSEJRTDpJRF9pbmNyZWFtZW50XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgaWYodGhpcy5wcm9wcy5TZWxlY3Rpb24hPT10aGlzLnN0YXRlLk1lZF9zZWxlY3Rpb24pe1xuICAgICAgICAgICAgXG4gICAgICAgICAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wcm9wcy5TZWxlY3Rpb24pXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByb3BzLlNlbGVjdGlvbi5sZW5ndGgpXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBNZWRfc2VsZWN0aW9uOnRoaXMucHJvcHMuU2VsZWN0aW9uXG4gICAgICAgICAgICB9LCgpPT57XG4gICAgICAgICAgICAgICAgaWYodGhpcy5wcm9wcy5JbnNlcnQ9PVwiVXBcIil7XG4gICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgbGV0IE5ld01lZEVsZW09dGhpcy5wcm9wcy5TZWxlY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgTmV3TWVkRWxlbS5pZD1gJHt0aGlzLnN0YXRlLklEX2luZGV4X0hCUUx9SUlgXG4gICAgICAgICAgICAgICAgICAgIGFydGljbGUuaW5zZXJ0QmVmb3JlKHRoaXMucHJvcHMuU2VsZWN0aW9uLHNlbGVjdGVkKVxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXRlLnNlbGVjdGVkKVxuICAgICAgICAgICAgICAgICAgICBcbiAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IE5ld01lZEVsZW09dGhpcy5wcm9wcy5TZWxlY3Rpb25cblxuICAgICAgICAgICAgICAgICAgICBOZXdNZWRFbGVtLmlkPWAke3RoaXMuc3RhdGUuSURfaW5kZXhfSEJRTH1JSWBcbiAgICAgICAgICAgICAgICAgICAgdHJ5e1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJ0aWNsZS5pbnNlcnRCZWZvcmUoTmV3TWVkRWxlbSxzZWxlY3RlZC5uZXh0U2libGluZylcblxuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2goZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnRpY2xlLmFwcGVuZENoaWxkKE5ld01lZEVsZW0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IElEX2luY3JlYW1lbnQ9dGhpcy5zdGF0ZS5JRF9pbmRleF9IQlFMKzFcblxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBjbGlja2VkOnRoaXMucHJvcHMuRm9udCxcbiAgICAgICAgICAgICAgICAgICAgSURfaW5kZXhfSEJRTDpJRF9pbmNyZWFtZW50XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfVxuXG5cblxuICAgICAgICBmb3IobGV0IGs9MDtrPGNoZWNrLmxlbmd0aDtrKyspe1xuXG5cblxuICAgICAgICAgICAgY2hlY2tba10ub25jbGljaz0oKT0+eyAgXG4gICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIGNoZWNrW2srMV0uc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsZmFsc2UpXG5cblxuXG4gICAgICAgICAgICAgICAgdHJ5e1xuICAgICAgICAgICAgICAgICAgICBjaGVja1trXS5zZXRBdHRyaWJ1dGUoXCJjb250ZW50ZWRpdGFibGVcIix0cnVlKVxuICAgICAgICAgICAgICAgICAgICBpZihjaGVja1trKzFdIT09dW5kZWZpbmVkICYmIGNoZWNrW2srMV0hPT1udWxsKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrW2srMV0uc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsZmFsc2UpXG4gICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDpjaGVja1trXS5pZFxuICAgICAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoKGUpe1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRSWSBBTkQgQ0FUQ0ggRlVOQ1RJT04gRVJST1JcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgIFxuXG5cblxuXG4gICAgICAgIH1cblxuICAgXG5cblxuICAgXG4gICAgIFxuICAgICBcblxuICAgICAgICAvLyBsZXQgRm9udD10aGlzLnByb3BzLkZvbnRcblxuXG5cbiAgICAgICAgXG5cblxuXG4gICAgIFxuICAgICAgICBcblxuICAgICAgIFxuXG5cblxuICAgICAgICBcblxuIFxuICAgXG4gICAgfVxuICAgIFxuICAgIGNvbXBvbmVudERpZE1vdW50PSgpPT57XG4gICAgICAgIGxldCBhcnRpY2xlPWRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhcnRpY2xlXCIpWzBdXG4gICAgICAgIC8vIGxldCBjb250ZW50PWRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJibG9nLWNvbnRlbnRcIilcbiAgICAgICAgbGV0IGNvbnRlbnQ9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFydGljbGVcIilbMF0uY2hpbGRyZW5cblxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkJpblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgICAgICAgICAgaWYodGhpcy5zdGF0ZS5zZWxlY3RlZCE9PW51bGwgJiYgdGhpcy5zdGF0ZS5zZWxlY3RlZCE9PXVuZGVmaW5lZCAmJiBhcnRpY2xlLmNoaWxkcmVuLmxlbmd0aCE9PTEpe1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIC8vICAgICBEZWxldGU6dGhpcy5wcm9wcy5EZWxldGVcbiAgICAgICAgICAgICAgICAvLyB9KVxuICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiMVwiKSlcbiAgICBcbiAgICAgICAgICAgICAgICBsZXQgZGVsPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnN0YXRlLnNlbGVjdGVkKVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdGUuc2VsZWN0ZWQpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGVsKVxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGRlbC5wYXJlbnRFbGVtZW50KVxuICAgICAgICAgICAgICAgIGRlbC5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGRlbClcbiAgICAgICAgICAgICAgICBmb3IobGV0IGs9MDtrPGNvbnRlbnQubGVuZ3RoO2srKyl7XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGVudFtrXS5vbmNsaWNrPSgpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50W2tdLnNldEF0dHJpYnV0ZShcImNvbnRlbnRlZGl0YWJsZVwiLHRydWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihjb250ZW50W2srMV0hPT11bmRlZmluZWQgJiYgY29udGVudFtrKzFdIT09bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFtrKzFdLnNldEF0dHJpYnV0ZShcImNvbnRlbnRlZGl0YWJsZVwiLGZhbHNlKVxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOmNvbnRlbnRba10uaWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICBcbiAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICBcblxuICBcblxuICAgICAgIFxuXG5cblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIC8vIFRvIHN0b3AgSFRNTCBmcm9tIGJyZWFraW5nIGlmIHVzZXIgcGFzdGVzIHNvbWUgdGV4dCBvdGhlciB0aGFuIHdyaXRpbmcgaXRcblxuICAgICAgICB2YXIgY2UgPSBhcnRpY2xlXG4gICAgICAgIGNlLmFkZEV2ZW50TGlzdGVuZXIoJ3Bhc3RlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICB2YXIgdGV4dCA9IGUuY2xpcGJvYXJkRGF0YS5nZXREYXRhKCd0ZXh0L3BsYWluJylcbiAgICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCgnaW5zZXJ0VGV4dCcsIGZhbHNlLCB0ZXh0KVxuICAgICAgICB9KVxuXG5cblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5cblxuXG4gICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gRXZlbnQgbGlzdGVuZXJzIG9uIGFydGljbGUgXG5cbiAgICAgICAgZm9yKGxldCBrPTA7azxjb250ZW50Lmxlbmd0aDtrKyspe1xuICAgXG5cbiAgICAgICAgICAgIGNvbnRlbnRba10ub25jbGljaz0oKT0+e1xuICAgICAgICAgICAgICAgIGNvbnRlbnRba10uc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsdHJ1ZSlcbiAgICAgICAgICAgICAgICBpZihjb250ZW50W2srMV0hPT11bmRlZmluZWQgJiYgY29udGVudFtrKzFdIT09bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRbaysxXS5zZXRBdHRyaWJ1dGUoXCJjb250ZW50ZWRpdGFibGVcIixmYWxzZSlcblxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDpjb250ZW50W2tdLmlkXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgXG5cblxuXG5cbiAgICAgICAgfVxuICAgICBcbiAgICAgICAgICAgIGFydGljbGUuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLChlKT0+e1xuICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBpZihlLmlucHV0VHlwZT09XCJpbnNlcnRQYXJhZ3JhcGhcIiB8fCBlLmRhdGEgPT0gbnVsbCl7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IHNwYW5zPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic3BhblwiKVxuICAgICAgICAgICAgICAgICAgICBmb3IobGV0IGk9MDtpPHNwYW5zLmxlbmd0aDtpKyspe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3BhbnNbaV0uc3R5bGUpXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuc1tpXS5zdHlsZT1zcGFuc1tpXS5wYXJlbnRFbGVtZW50LnN0eWxlXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuc1tpXS5zdHlsZS5mb250RmFtaWx5PXNwYW5zW2ldLnBhcmVudEVsZW1lbnQuc3R5bGUuZm9udEZhbWlseVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzcGFuc1tpXS5jbGFzc05hbWU9c3BhbnNbaV0ucGFyZW50RWxlbWVudC5jbGFzc05hbWVcbiAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBqPTA7ajxhcnRpY2xlLmNoaWxkRWxlbWVudENvdW50O2orKyl7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaiE9PTApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFydGljbGUuY2hpbGRyZW5bal0uaWQ9PWFydGljbGUuY2hpbGRyZW5bai0xXS5pZCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFydGljbGUuY2hpbGRyZW5bal0uaW5uZXJUZXh0LnRyaW0oKSAhPT1cIlwiKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFydGljbGUuY2hpbGRyZW5bal0uaWQ9YEYke2FydGljbGUuY2hpbGRyZW5bal0uaWR9YFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJ0aWNsZS5jaGlsZHJlbltqLTFdLmlkPWBCJHthcnRpY2xlLmNoaWxkcmVuW2otMV0uaWR9YFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpZEluZD10aGlzLnN0YXRlLklEX2luZGV4KzFcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEX2luZGV4OiBpZEluZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcnRpY2xlLmNoaWxkcmVuW2pdLmlkPSBpZEluZFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOm51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBrPTA7azxjb250ZW50Lmxlbmd0aDtrKyspe1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRba10ub25jbGljaz0oKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRba10uc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsdHJ1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50W2srMV0uc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsZmFsc2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOmNvbnRlbnRba10uaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG5cbiAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIFxuICAgIFxuICAgIFxuICAgICAgIFxuXG5cbiAgICAgICAgICAgICAgICAvLyBpZihhcnRpY2xlLmZpcnN0Q2hpbGQuaW5uZXJUZXh0LnRyaW0oKS5sZW5ndGg9PTApe1xuICAgICAgICAgICAgICAgIC8vICAgICBhcnRpY2xlLmZpcnN0Q2hpbGQuaW5uZXJUZXh0PVwiflwiXG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgICAgICAgaWYoYXJ0aWNsZS5jaGlsZHJlbi5sZW5ndGg9PTApe1xuICAgICAgICAgICAgICAgICAgICBsZXQgY29udGVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuY2xhc3NOYW1lPVwiYmxvZ0NvbnRlbnRcIlxuICAgICAgICAgICAgICAgICAgICBjb250ZW50LmlkPVwiMVwiXG4gICAgICAgICAgICAgICAgICAgIGFydGljbGUuYXBwZW5kQ2hpbGQoY29udGVudClcblxuICAgICAgICAgICAgIFxuICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcbiAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICBcbiAgIFxuXG4gICAgICAgXG5cbiBcbiAgICBcblxuICAgICAgXG4gICAgfVxuXG4gICAgXG5cbiAgICByZW5kZXIoKSB7IFxuICAgICAgXG4gICAgICAgIHJldHVybiAoICBcbiAgICAgICAgICAgIDw+XG4gICAgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFydGljbGVcIiAgIGNvbnRlbnRFZGl0YWJsZT1cInRydWVcIiAgPlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Jsb2dDb250ZW50JyBpZD1cIjFcIiAgY29udGVudEVkaXRhYmxlPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgIERpc3BhdGNoIG9uIG5leHQuanMgcmVkdXggdmVzaW9uIDIuMi4wMi52c1xuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICBcblxuICAgICAgICAgIFxuICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgPC9kaXY+XG5cblxuICAgICAgICAgICAgPENvbnRyb2xiYXIvPlxuXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgKTtcbiAgICB9XG59XG4gXG5cblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgXG4gICAgICAgIEZvbnQ6c3RhdGUuRWRpdC5Gb250LFxuICAgICAgICBJbnNlcnQ6c3RhdGUuRWRpdC5JbnNlcnQsXG4gICAgICAgIERlbGV0ZTpzdGF0ZS5FZGl0LkRlbGV0ZSxcbiAgICAgICAgU2VsZWN0aW9uOnN0YXRlLkVkaXQuU2VsZWN0ZWRcblxuXG5cblxuICAgIH1cbn1cblxuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSAoZGlzcGF0Y2gpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBTZXQ6IChkaXYpID0+IGRpc3BhdGNoKGFjdGlvbnMuU2VsZWN0U3VjY2VzcyhkaXYpKSxcbiAgICAgICAgXG4gIFxuXG4gICAgfVxufVxuXG4vLyBleHBvcnQgZGVmYXVsdCBXcml0aW5nO1xuZXhwb3J0IGRlZmF1bHQgKGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLG1hcERpc3BhdGNoVG9Qcm9wcykoV3JpdGluZykpXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tSU1QT1JUUy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuXG4vLyBpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG4vLyBpbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuLy8gaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9zdG9yZS9hY3Rpb25zL2F1dGgnO1xuXG5cblxuXG5cbi8vIGF4aW9zLmRlZmF1bHRzLnhzcmZIZWFkZXJOYW1lID0gXCJYLUNTUkZUT0tFTlwiO1xuLy8gYXhpb3MuZGVmYXVsdHMueHNyZkNvb2tpZU5hbWUgPSBcImNzcmZ0b2tlblwiO1xuXG5cblxuXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tX19SRURVWC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiB7XG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgSldUOiBzdGF0ZS5qd3QsXG4gICAgXG5cbi8vICAgICB9XG4vLyB9XG5cbi8vIGNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IChkaXNwYXRjaCkgPT4ge1xuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICAgIGRlY29kZTogKEpXVCkgPT4gZGlzcGF0Y2goYWN0aW9ucy5hdXRoSldUKEpXVCkpLFxuLy8gICAgICAgICBDaGVja1VzZXI6ICgpID0+IGRpc3BhdGNoKGFjdGlvbnMuYXV0aENoZWNrU3RhdGUoKSksXG5cbi8vICAgICB9XG4vLyB9XG5cbi8vIC8vIGV4cG9ydCBkZWZhdWx0IFdyaXRpbmdcbi8vIGV4cG9ydCBkZWZhdWx0IChjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcyxtYXBEaXNwYXRjaFRvUHJvcHMpKFdyaXRpbmcpKVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ29tcG9uZW50IiwiQ29udHJvbGJhciIsImNvbm5lY3QiLCJhY3Rpb25zIiwiV3JpdGluZyIsInJlbmRlciIsImRpdiIsImNsYXNzTmFtZSIsImNvbnRlbnRFZGl0YWJsZSIsImlkIiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiQ29udGVudEVsZW1lbnQiLCJhY3RpdmUiLCJGb250IiwiSURfaW5kZXgiLCJJRF9pbmRleF9IQlFMIiwic2VsZWN0ZWQiLCJjbGlja2VkIiwiRGVsZXRlIiwiTWVkX3NlbGVjdGlvbiIsImNvbXBvbmVudERpZFVwZGF0ZSIsImFydGljbGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJjaGVjayIsImNoaWxkcmVuIiwiZ2V0RWxlbWVudEJ5SWQiLCJqIiwibGVuZ3RoIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJOZXdFbGVtIiwiY3JlYXRlRWxlbWVudCIsImluY2x1ZGVzIiwidG9TdHJpbmciLCJzcGxpdCIsIkluc2VydCIsIkxpc3RFbGVtIiwiaW5uZXJUZXh0IiwiVW5vcmRlcmVkTGlzdCIsImFwcGVuZENoaWxkIiwiaW5zZXJ0QmVmb3JlIiwibmV4dFNpYmxpbmciLCJJRF9pbmNyZWFtZW50Iiwic2V0U3RhdGUiLCJTZWxlY3Rpb24iLCJOZXdNZWRFbGVtIiwiayIsIm9uY2xpY2siLCJzZXRBdHRyaWJ1dGUiLCJ1bmRlZmluZWQiLCJjb21wb25lbnREaWRNb3VudCIsImNvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZGVsIiwicGFyZW50RWxlbWVudCIsInJlbW92ZUNoaWxkIiwiY2UiLCJwcmV2ZW50RGVmYXVsdCIsInRleHQiLCJjbGlwYm9hcmREYXRhIiwiZ2V0RGF0YSIsImV4ZWNDb21tYW5kIiwiaW5wdXRUeXBlIiwiZGF0YSIsInNwYW5zIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpIiwic3R5bGUiLCJmb250RmFtaWx5IiwiY2hpbGRFbGVtZW50Q291bnQiLCJ0cmltIiwiaWRJbmQiLCJzZWxlY3RlZERpdlJlZHV4IiwiU2V0IiwibWFwU3RhdGVUb1Byb3BzIiwiRWRpdCIsIlNlbGVjdGVkIiwibWFwRGlzcGF0Y2hUb1Byb3BzIiwiZGlzcGF0Y2giLCJTZWxlY3RTdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/Writing.js\n"));

/***/ })

});